<?xml version="1.0" encoding="UTF-8"?>
<merge:options
  indent="  "
  braceStyle="matching"
  redirect="Gen"
  block="\s*@\s*generated\s*NOT\s*\n"
  noImport="\s*//\s*import\s+([\w.*]*)\s*;\s*\n"
  xmlns:merge="http://www.eclipse.org/org/eclipse/emf/codegen/jmerge/Options">

<!-- Tabbed Standard

  indent="&#x9;"
  braceStyle="standard"

-->

    <!-- this accepts both new and old style markup. -->
    <!-- コメントに「@model」とあるメンバー定義を特定するためのパターン。識別子はmodel -->
    <merge:dictionaryPattern
      name="modelMembers"
      select="Member/getComment"
      match="\s*@\s*(model)"/>

    <!-- コメントに「@generated [This field/method]」とあるメンバー定義を特定するためのパターン。識別子はgen -->
    <merge:dictionaryPattern
      name="generatedUnmodifiableMembers"
      select="Member/getComment"
      match="\s*@\s*(gen)erated\s*(This field/method[^\n]*)*\n"/>

    <!-- コメントに「@generated modifiable～」とあるメンバー定義を特定するためのパターン。識別子はmodifiable -->
    <merge:dictionaryPattern
      name="generatedModifiableMembers"
      select="Member/getComment"
      match="\s*@\s*generated\s*(modifiable)\s*\n"/>

    <!-- This is like the above, but for backward compatibility -->
    <!-- コメントに「@lastgen～」とあるメンバー定義を特定するためのパターン。識別子はlastgen -->
    <merge:dictionaryPattern
      name="generatedLastGenMembers"
      select="Member/getComment"
      match="\s*@\s*(lastgen).*\n"/>

    <!-- コメントに「@ordered～」とあるメンバー定義を特定するためのパターン。識別子はordered -->
    <merge:dictionaryPattern
      name="orderedMembers"
      select="Member/getComment"
      match="\s*@\s*(ordered)\s*\n"/>

    <!-- マージ先のソースに、識別子genで特定されるdictionaryPatternのメンバーが有る場合、フラグのマージを行う -->
    <!-- フラグの例:abstract,final,native... -->
    <merge:pull
      sourceGet="Member/getFlags"
      targetMarkup="^gen$"
      targetPut="Member/setFlags"/>

<!--
    <merge:pull
      sourceMarkup="^modifiable$"
      sourceGet="Member/getComment"
      targetMarkup="^gen$"
      targetPut="Member/setComment"/>
-->

    <!-- マージ元およびマージ先のソースに、識別子modifiableで特定されるdictionaryPatternのメンバーが有る場合、-->
    <!-- begin-user-docとend-user-docに囲まれている箇所以外のコメントをマージ元の内容で上書きする -->
    <merge:pull
      sourceMarkup="^modifiable$"
      sourceGet="Member/getComment"
      sourceTransfer="(\s*&lt;!--\s*begin-user-doc.*?end-user-doc\s*-->\s*)\n"
      targetMarkup="^modifiable$"
      targetPut="Member/setComment"/>

    <!-- マージ元およびマージ先のソースに、識別子genで特定されるdictionaryPatternのメンバーが有る場合、-->
    <!-- begin-user-docとend-user-docに囲まれている箇所以外のコメントをマージ元の内容で上書きする -->
    <merge:pull
      sourceMarkup="^gen$"
      sourceGet="Member/getComment"
      sourceTransfer="(\s*&lt;!--\s*begin-user-doc.*?end-user-doc\s*-->\s*)\n"
      targetMarkup="^gen$"
      targetPut="Member/setComment"/>

    <!-- マージ元のクラスコメントをマージ先に上書きする -->
    <merge:pull
      sourceGet="Type/getComment"
      targetPut="Type/setComment"/>

    <!-- マージ先に識別子genで特定されるdictionaryPatternのメンバーフィールドが有る場合 -->
    <!-- マージ元の初期値をマージ先に上書きする -->
    <merge:pull
      sourceGet="Initializer/getBody"
      targetMarkup="^gen$"
      targetPut="Initializer/setBody"/>

    <!-- マージ先に識別子lastgen,gen,modifiable,modelいずれかで特定されるクラスがある場合 -->
    <!-- 基底クラスのクラス名をマージ元からマージ先に上書きする -->
    <merge:pull
      sourceGet="Type/getSuperclass"
      targetMarkup="^lastgen$|^gen$|^modifiable$|^model$"
      targetPut="Type/setSuperclass"/>

<!-- こちらだと、括弧の位置がずれる。
    <merge:pull
      sourceGet="Type/getSuperInterfaces"
      sourceTransfer="(\s*@\s*extends|\s*@\s*implements)(.*?)\n"
      targetMarkup="^lastgen$|^gen$|^modifiable$|^model$"
      targetPut="Type/addSuperInterface"/>-->

    <!-- 基底インタフェースのクラス名をマージ元からマージ先に上書きする -->
  <merge:pull
    sourceGet="Type/getSuperInterfaces"
    targetPut="Type/setSuperInterfaces"/>

    <!-- マージ先に識別子genで特定されるdictionaryPatternのメンバーフィールドが有る場合 -->
    <!-- マージ元のコメントをマージ先に上書きする -->
    <merge:pull
      sourceGet="Field/getComment"
      targetMarkup="^gen$"
      targetPut="Field/setComment"/>
    <!-- マージ先に識別子genで特定されるdictionaryPatternのメンバーフィールドが有る場合 -->
    <!-- マージ元のクラス名をマージ先に上書きする -->
    <merge:pull
      sourceGet="Field/getType"
      targetMarkup="^gen$"
      targetPut="Field/setType"/>
    <!-- マージ元およびマージ先に識別子genで特定されるdictionaryPatternのメンバーフィールドが有る場合 -->
    <!-- マージ元の初期値をマージ先に上書きする -->
    <merge:pull
      sourceMarkup="^gen$"
      sourceGet="Field/getInitializer"
      targetMarkup="^gen$"
      targetPut="Field/setInitializer"/>

    <!-- マージ先に識別子genで特定されるdictionaryPatternのメンバーメソッドが有る場合 -->
    <!-- マージ元のコメントをマージ先に上書きする -->
    <merge:pull
      sourceGet="Method/getComment"
      targetMarkup="^gen$"
      targetPut="Method/setComment"/>
    <!-- マージ先に識別子genで特定されるdictionaryPatternのメンバーメソッドが有る場合 -->
    <!-- マージ元のメソッド本体をマージ先に上書きする -->
    <merge:pull
      sourceGet="Method/getBody"
      targetMarkup="^gen$"
      targetPut="Method/setBody"/>
    <!-- マージ先に識別子genまたはmodelで特定されるdictionaryPatternのメンバーメソッドが有る場合 -->
    <!-- マージ元の返り値のクラス名をマージ先に上書きする -->
    <merge:pull
      sourceGet="Method/getReturnType"
      targetMarkup="^gen$|^model$"
      targetPut="Method/setReturnType"/>
    <!-- マージ先に識別子genまたはmodelで特定されるdictionaryPatternのメンバーメソッドが有る場合 -->
    <!-- マージ元のthrows句で指定する例外クラス名をマージ先に上書きする -->
    <merge:pull
      sourceGet="Method/getExceptions"
      targetMarkup="^gen$"
      targetPut="Method/addException"/>

    <merge:pull 
      sourceGet="EnumConstant/getArguments" 
      targetMarkup="^gen$" 
      targetPut="EnumConstant/setArguments"/> 
    <merge:pull 
      sourceGet="EnumConstant/getBody" 
      targetMarkup="^gen$" 
      targetPut="EnumConstant/setBody"/> 

    <!-- マージ元には無い識別子genで特定されるメンバーがマージ先に有る場合、削除する -->
    <merge:sweep markup="^gen$" select="Member"/>
    <!-- マージ元には無い下記の識別子で特定されるimport文がマージ先に有る場合、削除する -->
    <merge:sweep markup="^org.eclipse.emf.ecore.EMetaObject$" select="Import"/> 
    <merge:sweep markup="^org.eclipse.emf.ecore.impl.EMetaObjectImpl$" select="Import"/> 
    <merge:sweep markup="^org.eclipse.emf.ecore.util.EObjectCompositeEList$" select="Import"/> 
    <merge:sweep markup="^org.eclipse.emf.ecore.util.EObjectCompositeWithInverseEList$" select="Import"/> 
    <merge:sweep markup="^org.eclipse.emf.common.util.AbstractEnumerator$" select="Import"/> 

    <!-- マージ元に識別子orderedで特定されるメンバーがあった場合、マージの際に順序を維持する -->
    <merge:sort markup="^ordered$" select="Member"/>
    <merge:sort markup="^ordered$" select="EnumConstant"/> 

    <!-- マージ先のヘッダコメントを使う -->
  <merge:pull
    sourceGet="CompilationUnit/setHeader"
    targetPut="CompilationUnit/getHeader"/>

  <!-- Basic Rules


    <merge:pull
      sourceGet="Package/getName"
      targetPut="Package/setName"/>

    <merge:pull
      sourceGet="Member/getFlags"
      targetPut="Member/setFlags"/>
    <merge:pull
      sourceGet="Member/getComment"
      targetPut="Member/setComment"/>

    <merge:pull
      sourceGet="Type/getSuperclass"
      targetPut="Type/setSuperclass"/>
    <merge:pull
      sourceGet="Type/getSuperInterfaces"
      targetPut="Type/addSuperInterface"/>

    <merge:pull
      sourceGet="Initializer/getBody"
      targetPut="Initializer/setBody"/>

    <merge:pull
      sourceGet="Field/getType"
      targetPut="Field/setType"/>
    <merge:pull
      sourceGet="Field/getInitializer"
      targetPut="Field/setInitializer"/>

    <merge:pull
      sourceGet="Method/getBody"
      targetPut="Method/setBody"/>
    <merge:pull
      sourceGet="Method/getReturnType"
      targetPut="Method/setReturnType"/>
    <merge:pull
      sourceGet="Method/getExceptions"
      targetPut="Method/addException"/>
-->

<!-- Push Enum Constants only for generated Enums -->
<!--
  <merge:push targetParentMarkup="^gen$" select="EnumConstant"/>
-->

<!-- Push Annotation Type Members only for generated Annotation Types -->
<!--
  <merge:push targetParentMarkup="^gen$" select="AnnotationTypeMember"/>
-->

<!-- Sets the content of annotations if the parent is marked with gen -->
<!--
    <merge:pull
      sourceGet="Annotation/getContents"
      targetParentMarkup="^gen$"
      targetPut="Annotation/setContents"/>
-->     

<!-- Remove annotations of generated target nodes if the annotation is not in the source -->
<!--
  <merge:sweep parentMarkup="^gen$" select="Annotation"/>
-->   

<!--
    <merge:pull
      sourceMarkup="^modifiable$"
      sourceGet="Member/getComment"
      targetMarkup="^gen$"
      targetPut="Member/setComment"/>
-->

</merge:options> 
